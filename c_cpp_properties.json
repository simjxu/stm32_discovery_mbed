{
    "configurations": [
        {
            "includePath": [
                "${workspaceRoot}\\*",
                "${workspaceRoot}\\mbed-os\\*",
                "${workspaceRoot}\\mbed-os\\drivers\\*",
                "${workspaceRoot}\\mbed-os\\targets\\*",
                "${workspaceRoot}\\mbed-os\\targets\\TARGET_STM\\*",
                "${workspaceRoot}\\mbed-os\\targets\\TARGET_STM\\TARGET_STM32L4\\*",
                "${workspaceRoot}\\mbed-os\\targets\\TARGET_STM\\TARGET_STM32L4\\TARGET_STM32L475xG\\*",
                "${workspaceRoot}\\mbed-os\\targets\\TARGET_STM\\TARGET_STM32L4\\TARGET_STM32L475xG\\device\\*",
                "${workspaceRoot}\\mbed-os\\targets\\TARGET_STM\\TARGET_STM32L4\\TARGET_STM32L475xG\\device\\TOOLCHAIN_GCC_ARM\\*",
                "${workspaceRoot}\\mbed-os\\targets\\TARGET_STM\\TARGET_STM32L4\\TARGET_STM32L475xG\\TARGET_DISCO_L475VG_IOT01A\\*",
                "${workspaceRoot}\\mbed-os\\targets\\TARGET_STM\\TARGET_STM32L4\\device\\*",
                "${workspaceRoot}\\mbed-os\\hal\\*",
                "${workspaceRoot}\\mbed-os\\hal\\storage_abstraction\\*",
                "${workspaceRoot}\\mbed-os\\platform\\*",
                "${workspaceRoot}\\mbed-os\\features\\*",
                "${workspaceRoot}\\mbed-os\\features\\netsocket\\*",
                "${workspaceRoot}\\mbed-os\\features\\netsocket\\cellular\\*",
                "${workspaceRoot}\\mbed-os\\features\\netsocket\\cellular\\generic_modem_driver\\*",
                "${workspaceRoot}\\mbed-os\\features\\netsocket\\cellular\\utils\\*",
                "${workspaceRoot}\\mbed-os\\features\\mbedtls\\*",
                "${workspaceRoot}\\mbed-os\\features\\mbedtls\\inc\\*",
                "${workspaceRoot}\\mbed-os\\features\\mbedtls\\inc\\mbedtls\\*",
                "${workspaceRoot}\\mbed-os\\features\\mbedtls\\importer\\*",
                "${workspaceRoot}\\mbed-os\\features\\mbedtls\\targets\\*",
                "${workspaceRoot}\\mbed-os\\features\\mbedtls\\targets\\TARGET_STM\\*",
                "${workspaceRoot}\\mbed-os\\features\\mbedtls\\targets\\TARGET_STM\\TARGET_STM32L4\\*",
                "${workspaceRoot}\\mbed-os\\features\\mbedtls\\platform\\*",
                "${workspaceRoot}\\mbed-os\\features\\mbedtls\\platform\\inc\\*",
                "${workspaceRoot}\\mbed-os\\features\\mbedtls\\platform\\src\\*",
                "${workspaceRoot}\\mbed-os\\features\\mbedtls\\src\\*",
                "${workspaceRoot}\\mbed-os\\features\\filesystem\\*",
                "${workspaceRoot}\\mbed-os\\features\\filesystem\\bd\\*",
                "${workspaceRoot}\\mbed-os\\features\\filesystem\\fat\\*",
                "${workspaceRoot}\\mbed-os\\features\\filesystem\\fat\\ChaN\\*",
                "${workspaceRoot}\\mbed-os\\features\\nanostack\\*",
                "${workspaceRoot}\\mbed-os\\features\\storage\\*",
                "${workspaceRoot}\\mbed-os\\features\\frameworks\\*",
                "${workspaceRoot}\\mbed-os\\features\\frameworks\\unity\\*",
                "${workspaceRoot}\\mbed-os\\features\\frameworks\\unity\\unity\\*",
                "${workspaceRoot}\\mbed-os\\features\\frameworks\\unity\\source\\*",
                "${workspaceRoot}\\mbed-os\\features\\frameworks\\greentea-client\\*",
                "${workspaceRoot}\\mbed-os\\features\\frameworks\\greentea-client\\source\\*",
                "${workspaceRoot}\\mbed-os\\features\\frameworks\\greentea-client\\greentea-client\\*",
                "${workspaceRoot}\\mbed-os\\features\\frameworks\\utest\\*",
                "${workspaceRoot}\\mbed-os\\features\\frameworks\\utest\\source\\*",
                "${workspaceRoot}\\mbed-os\\features\\frameworks\\utest\\utest\\*",
                "${workspaceRoot}\\mbed-os\\cmsis\\*",
                "${workspaceRoot}\\mbed-os\\cmsis\\TARGET_CORTEX_M\\*",
                "${workspaceRoot}\\mbed-os\\cmsis\\TARGET_CORTEX_M\\TOOLCHAIN_GCC\\*",
                "${workspaceRoot}\\mbed-os\\rtos\\*",
                "${workspaceRoot}\\mbed-os\\rtos\\rtx5\\*",
                "${workspaceRoot}\\mbed-os\\rtos\\rtx5\\TARGET_CORTEX_M\\*",
                "${workspaceRoot}\\mbed-os\\rtos\\rtx5\\TARGET_CORTEX_M\\TARGET_RTOS_M4_M7\\*",
                "${workspaceRoot}\\mbed-os\\rtos\\rtx5\\TARGET_CORTEX_M\\TARGET_RTOS_M4_M7\\TOOLCHAIN_GCC\\*",
                "${workspaceRoot}\\mbed-os\\rtos\\rtx4\\*",
                "${workspaceRoot}\\mbed-os\\events\\*",
                "${workspaceRoot}\\mbed-os\\events\\equeue\\*",
                "${workspaceRoot}\\shields\\*",
                "${workspaceRoot}\\shields\\TARGET_ST_BLUENRG\\*",
                "${workspaceRoot}\\shields\\TARGET_ST_BLUENRG\\bluenrg\\*",
                "${workspaceRoot}\\shields\\TARGET_ST_BLUENRG\\bluenrg\\bluenrg-hci\\*",
                "${workspaceRoot}\\shields\\TARGET_ST_BLUENRG\\bluenrg\\platform\\*",
                "${workspaceRoot}\\shields\\TARGET_ST_BLUENRG\\bluenrg\\utils\\*",
                "${workspaceRoot}\\shields\\TARGET_ST_BLUENRG\\source\\*",
                "${workspaceRoot}\\shields\\TARGET_ST_BLUENRG\\source\\bluenrg-hci\\*",
                "${workspaceRoot}\\shields\\TARGET_ST_BLUENRG\\source\\bluenrg-hci\\hci\\*",
                "${workspaceRoot}\\shields\\TARGET_ST_BLUENRG\\source\\bluenrg-hci\\hci\\controller\\*",
                "${workspaceRoot}\\shields\\TARGET_ST_BLUENRG\\source\\bluenrg-hci\\utils\\*",
                "${workspaceRoot}\\shields\\TARGET_ST_BLUENRG\\source\\platform\\*",
                "${workspaceRoot}\\shields\\TARGET_ST_BLUENRG\\source\\utils\\*",
                "${workspaceRoot}\\source\\*",
                "${workspaceRoot}\\mbed-os\\features\\FEATURE_BLE\\*",
                "${workspaceRoot}\\mbed-os\\features\\FEATURE_BLE\\ble\\*",
                "${workspaceRoot}\\mbed-os\\features\\FEATURE_BLE\\ble\\services\\*",
                "${workspaceRoot}\\mbed-os\\features\\FEATURE_BLE\\targets\\*",
                "${workspaceRoot}\\mbed-os\\features\\FEATURE_BLE\\source\\*",
                "${workspaceRoot}\\mbed-os\\features\\FEATURE_BLE\\source\\services\\*"
            ],
            "name": "Windows",
            "macFrameworkPath": [
                "/System/Library/Frameworks",
                "/Library/Frameworks"
            ],
            "intelliSenseMode": "macos-clang-x64",
            "compilerPath": "/usr/bin/clang",
            "cStandard": "c11",
            "cppStandard": "c++98"
        },
        {
            "includePath": [
                "${workspaceRoot}/*",
                "${workspaceRoot}/mbed-os/*",
                "${workspaceRoot}/mbed-os/drivers/*",
                "${workspaceRoot}/mbed-os/targets/*",
                "${workspaceRoot}/mbed-os/targets/TARGET_STM/*",
                "${workspaceRoot}/mbed-os/targets/TARGET_STM/TARGET_STM32L4/*",
                "${workspaceRoot}/mbed-os/targets/TARGET_STM/TARGET_STM32L4/TARGET_STM32L475xG/*",
                "${workspaceRoot}/mbed-os/targets/TARGET_STM/TARGET_STM32L4/TARGET_STM32L475xG/device/*",
                "${workspaceRoot}/mbed-os/targets/TARGET_STM/TARGET_STM32L4/TARGET_STM32L475xG/device/TOOLCHAIN_GCC_ARM/*",
                "${workspaceRoot}/mbed-os/targets/TARGET_STM/TARGET_STM32L4/TARGET_STM32L475xG/TARGET_DISCO_L475VG_IOT01A/*",
                "${workspaceRoot}/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/*",
                "${workspaceRoot}/mbed-os/hal/*",
                "${workspaceRoot}/mbed-os/hal/storage_abstraction/*",
                "${workspaceRoot}/mbed-os/platform/*",
                "${workspaceRoot}/mbed-os/features/*",
                "${workspaceRoot}/mbed-os/features/netsocket/*",
                "${workspaceRoot}/mbed-os/features/netsocket/cellular/*",
                "${workspaceRoot}/mbed-os/features/netsocket/cellular/generic_modem_driver/*",
                "${workspaceRoot}/mbed-os/features/netsocket/cellular/utils/*",
                "${workspaceRoot}/mbed-os/features/mbedtls/*",
                "${workspaceRoot}/mbed-os/features/mbedtls/inc/*",
                "${workspaceRoot}/mbed-os/features/mbedtls/inc/mbedtls/*",
                "${workspaceRoot}/mbed-os/features/mbedtls/importer/*",
                "${workspaceRoot}/mbed-os/features/mbedtls/targets/*",
                "${workspaceRoot}/mbed-os/features/mbedtls/targets/TARGET_STM/*",
                "${workspaceRoot}/mbed-os/features/mbedtls/targets/TARGET_STM/TARGET_STM32L4/*",
                "${workspaceRoot}/mbed-os/features/mbedtls/platform/*",
                "${workspaceRoot}/mbed-os/features/mbedtls/platform/inc/*",
                "${workspaceRoot}/mbed-os/features/mbedtls/platform/src/*",
                "${workspaceRoot}/mbed-os/features/mbedtls/src/*",
                "${workspaceRoot}/mbed-os/features/filesystem/*",
                "${workspaceRoot}/mbed-os/features/filesystem/bd/*",
                "${workspaceRoot}/mbed-os/features/filesystem/fat/*",
                "${workspaceRoot}/mbed-os/features/filesystem/fat/ChaN/*",
                "${workspaceRoot}/mbed-os/features/nanostack/*",
                "${workspaceRoot}/mbed-os/features/storage/*",
                "${workspaceRoot}/mbed-os/features/frameworks/*",
                "${workspaceRoot}/mbed-os/features/frameworks/unity/*",
                "${workspaceRoot}/mbed-os/features/frameworks/unity/unity/*",
                "${workspaceRoot}/mbed-os/features/frameworks/unity/source/*",
                "${workspaceRoot}/mbed-os/features/frameworks/greentea-client/*",
                "${workspaceRoot}/mbed-os/features/frameworks/greentea-client/source/*",
                "${workspaceRoot}/mbed-os/features/frameworks/greentea-client/greentea-client/*",
                "${workspaceRoot}/mbed-os/features/frameworks/utest/*",
                "${workspaceRoot}/mbed-os/features/frameworks/utest/source/*",
                "${workspaceRoot}/mbed-os/features/frameworks/utest/utest/*",
                "${workspaceRoot}/mbed-os/cmsis/*",
                "${workspaceRoot}/mbed-os/cmsis/TARGET_CORTEX_M/*",
                "${workspaceRoot}/mbed-os/cmsis/TARGET_CORTEX_M/TOOLCHAIN_GCC/*",
                "${workspaceRoot}/mbed-os/rtos/*",
                "${workspaceRoot}/mbed-os/rtos/rtx5/*",
                "${workspaceRoot}/mbed-os/rtos/rtx5/TARGET_CORTEX_M/*",
                "${workspaceRoot}/mbed-os/rtos/rtx5/TARGET_CORTEX_M/TARGET_RTOS_M4_M7/*",
                "${workspaceRoot}/mbed-os/rtos/rtx5/TARGET_CORTEX_M/TARGET_RTOS_M4_M7/TOOLCHAIN_GCC/*",
                "${workspaceRoot}/mbed-os/rtos/rtx4/*",
                "${workspaceRoot}/mbed-os/events/*",
                "${workspaceRoot}/mbed-os/events/equeue/*",
                "${workspaceRoot}/shields/*",
                "${workspaceRoot}/ble-x-nucleo-idb0xa1/*",
                "${workspaceRoot}/ble-x-nucleo-idb0xa1/bluenrg/*",
                "${workspaceRoot}/ble-x-nucleo-idb0xa1/bluenrg/bluenrg-hci/*",
                "${workspaceRoot}/ble-x-nucleo-idb0xa1/bluenrg/platform/*",
                "${workspaceRoot}/ble-x-nucleo-idb0xa1/bluenrg/utils/*",
                "${workspaceRoot}/ble-x-nucleo-idb0xa1/source/*",
                "${workspaceRoot}/ble-x-nucleo-idb0xa1/source/bluenrg-hci/*",
                "${workspaceRoot}/ble-x-nucleo-idb0xa1/source/bluenrg-hci/hci/*",
                "${workspaceRoot}/ble-x-nucleo-idb0xa1/source/bluenrg-hci/hci/controller/*",
                "${workspaceRoot}/ble-x-nucleo-idb0xa1/source/bluenrg-hci/utils/*",
                "${workspaceRoot}/ble-x-nucleo-idb0xa1/source/platform/*",
                "${workspaceRoot}/ble-x-nucleo-idb0xa1/source/utils/*",
                "${workspaceRoot}/source/*",
                "${workspaceRoot}/mbed-os/features/FEATURE_BLE/*",
                "${workspaceRoot}/mbed-os/features/FEATURE_BLE/ble/*",
                "${workspaceRoot}/mbed-os/features/FEATURE_BLE/ble/services/*",
                "${workspaceRoot}/mbed-os/features/FEATURE_BLE/targets/*",
                "${workspaceRoot}/mbed-os/features/FEATURE_BLE/source/*",
                "${workspaceRoot}/mbed-os/features/FEATURE_BLE/source/services/*"
            ],
            "name": "Mac",
            "macFrameworkPath": [
                "/System/Library/Frameworks",
                "/Library/Frameworks"
            ],
            "intelliSenseMode": "macos-clang-x64",
            "compilerPath": "/usr/bin/clang",
            "cStandard": "c11",
            "cppStandard": "c++98"
        },
        {
            "includePath": [
                "${workspaceRoot}/*",
                "${workspaceRoot}/mbed-os/*",
                "${workspaceRoot}/mbed-os/drivers/*",
                "${workspaceRoot}/mbed-os/targets/*",
                "${workspaceRoot}/mbed-os/targets/TARGET_STM/*",
                "${workspaceRoot}/mbed-os/targets/TARGET_STM/TARGET_STM32L4/*",
                "${workspaceRoot}/mbed-os/targets/TARGET_STM/TARGET_STM32L4/TARGET_STM32L475xG/*",
                "${workspaceRoot}/mbed-os/targets/TARGET_STM/TARGET_STM32L4/TARGET_STM32L475xG/device/*",
                "${workspaceRoot}/mbed-os/targets/TARGET_STM/TARGET_STM32L4/TARGET_STM32L475xG/device/TOOLCHAIN_GCC_ARM/*",
                "${workspaceRoot}/mbed-os/targets/TARGET_STM/TARGET_STM32L4/TARGET_STM32L475xG/TARGET_DISCO_L475VG_IOT01A/*",
                "${workspaceRoot}/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/*",
                "${workspaceRoot}/mbed-os/hal/*",
                "${workspaceRoot}/mbed-os/hal/storage_abstraction/*",
                "${workspaceRoot}/mbed-os/platform/*",
                "${workspaceRoot}/mbed-os/features/*",
                "${workspaceRoot}/mbed-os/features/netsocket/*",
                "${workspaceRoot}/mbed-os/features/netsocket/cellular/*",
                "${workspaceRoot}/mbed-os/features/netsocket/cellular/generic_modem_driver/*",
                "${workspaceRoot}/mbed-os/features/netsocket/cellular/utils/*",
                "${workspaceRoot}/mbed-os/features/mbedtls/*",
                "${workspaceRoot}/mbed-os/features/mbedtls/inc/*",
                "${workspaceRoot}/mbed-os/features/mbedtls/inc/mbedtls/*",
                "${workspaceRoot}/mbed-os/features/mbedtls/importer/*",
                "${workspaceRoot}/mbed-os/features/mbedtls/targets/*",
                "${workspaceRoot}/mbed-os/features/mbedtls/targets/TARGET_STM/*",
                "${workspaceRoot}/mbed-os/features/mbedtls/targets/TARGET_STM/TARGET_STM32L4/*",
                "${workspaceRoot}/mbed-os/features/mbedtls/platform/*",
                "${workspaceRoot}/mbed-os/features/mbedtls/platform/inc/*",
                "${workspaceRoot}/mbed-os/features/mbedtls/platform/src/*",
                "${workspaceRoot}/mbed-os/features/mbedtls/src/*",
                "${workspaceRoot}/mbed-os/features/filesystem/*",
                "${workspaceRoot}/mbed-os/features/filesystem/bd/*",
                "${workspaceRoot}/mbed-os/features/filesystem/fat/*",
                "${workspaceRoot}/mbed-os/features/filesystem/fat/ChaN/*",
                "${workspaceRoot}/mbed-os/features/nanostack/*",
                "${workspaceRoot}/mbed-os/features/storage/*",
                "${workspaceRoot}/mbed-os/features/frameworks/*",
                "${workspaceRoot}/mbed-os/features/frameworks/unity/*",
                "${workspaceRoot}/mbed-os/features/frameworks/unity/unity/*",
                "${workspaceRoot}/mbed-os/features/frameworks/unity/source/*",
                "${workspaceRoot}/mbed-os/features/frameworks/greentea-client/*",
                "${workspaceRoot}/mbed-os/features/frameworks/greentea-client/source/*",
                "${workspaceRoot}/mbed-os/features/frameworks/greentea-client/greentea-client/*",
                "${workspaceRoot}/mbed-os/features/frameworks/utest/*",
                "${workspaceRoot}/mbed-os/features/frameworks/utest/source/*",
                "${workspaceRoot}/mbed-os/features/frameworks/utest/utest/*",
                "${workspaceRoot}/mbed-os/cmsis/*",
                "${workspaceRoot}/mbed-os/cmsis/TARGET_CORTEX_M/*",
                "${workspaceRoot}/mbed-os/cmsis/TARGET_CORTEX_M/TOOLCHAIN_GCC/*",
                "${workspaceRoot}/mbed-os/rtos/*",
                "${workspaceRoot}/mbed-os/rtos/rtx5/*",
                "${workspaceRoot}/mbed-os/rtos/rtx5/TARGET_CORTEX_M/*",
                "${workspaceRoot}/mbed-os/rtos/rtx5/TARGET_CORTEX_M/TARGET_RTOS_M4_M7/*",
                "${workspaceRoot}/mbed-os/rtos/rtx5/TARGET_CORTEX_M/TARGET_RTOS_M4_M7/TOOLCHAIN_GCC/*",
                "${workspaceRoot}/mbed-os/rtos/rtx4/*",
                "${workspaceRoot}/mbed-os/events/*",
                "${workspaceRoot}/mbed-os/events/equeue/*",
                "${workspaceRoot}/shields/*",
                "${workspaceRoot}/ble-x-nucleo-idb0xa1/*",
                "${workspaceRoot}/ble-x-nucleo-idb0xa1/bluenrg/*",
                "${workspaceRoot}/ble-x-nucleo-idb0xa1/bluenrg/bluenrg-hci/*",
                "${workspaceRoot}/ble-x-nucleo-idb0xa1/bluenrg/platform/*",
                "${workspaceRoot}/ble-x-nucleo-idb0xa1/bluenrg/utils/*",
                "${workspaceRoot}/ble-x-nucleo-idb0xa1/source/*",
                "${workspaceRoot}/ble-x-nucleo-idb0xa1/source/bluenrg-hci/*",
                "${workspaceRoot}/ble-x-nucleo-idb0xa1/source/bluenrg-hci/hci/*",
                "${workspaceRoot}/ble-x-nucleo-idb0xa1/source/bluenrg-hci/hci/controller/*",
                "${workspaceRoot}/ble-x-nucleo-idb0xa1/source/bluenrg-hci/utils/*",
                "${workspaceRoot}/ble-x-nucleo-idb0xa1/source/platform/*",
                "${workspaceRoot}/ble-x-nucleo-idb0xa1/source/utils/*",
                "${workspaceRoot}/source/*",
                "${workspaceRoot}/mbed-os/features/FEATURE_BLE/*",
                "${workspaceRoot}/mbed-os/features/FEATURE_BLE/ble/*",
                "${workspaceRoot}/mbed-os/features/FEATURE_BLE/ble/services/*",
                "${workspaceRoot}/mbed-os/features/FEATURE_BLE/targets/*",
                "${workspaceRoot}/mbed-os/features/FEATURE_BLE/source/*",
                "${workspaceRoot}/mbed-os/features/FEATURE_BLE/source/services/*"
            ],
            "name": "Linux",
            "intelliSenseMode": "linux-gcc-x64",
            "compilerPath": "/usr/bin/clang",
            "cStandard": "c11",
            "cppStandard": "c++98"
        }
    ],
    "version": 4
}